<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Project Work on jwoolbright.com</title><link>https://jwoolbright.com/project-work/</link><description>Recent content in Project Work on jwoolbright.com</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Wed, 11 May 2022 15:46:05 -0500</lastBuildDate><atom:link href="https://jwoolbright.com/project-work/index.xml" rel="self" type="application/rss+xml"/><item><title>Scripting</title><link>https://jwoolbright.com/project-work/scripting/</link><pubDate>Wed, 11 May 2022 15:46:05 -0500</pubDate><guid>https://jwoolbright.com/project-work/scripting/</guid><description>Bash Scripts Below I begin to list some scripts that I have written recently for our the Linux Curriculum.
React Initialization Script: Click to View Script # install dependencies for React project wget -qO- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.1/install.sh | bash ## Install Caddy https://caddyserver.com/docs/install#debian-ubuntu-raspbian sudo apt install -y curl sudo apt install -y debian-keyring debian-archive-keyring apt-transport-https curl -1sLf &amp;#39;https://dl.cloudsmith.io/public/caddy/stable/gpg.key&amp;#39; | sudo tee /etc/apt/trusted.gpg.d/caddy-stable.asc curl -1sLf &amp;#39;https://dl.cloudsmith.io/public/caddy/stable/debian.deb.txt&amp;#39; | sudo tee /etc/apt/sources.list.d/caddy-stable.list sudo apt update -y sudo apt install caddy ## Install nvm export NVM_DIR=&amp;#34;$([ -z &amp;#34;${XDG_CONFIG_HOME-}&amp;#34; ] &amp;amp;&amp;amp; printf %s &amp;#34;${HOME}/.</description></item><item><title>Curriculum Development</title><link>https://jwoolbright.com/project-work/curriculum-development/</link><pubDate>Wed, 11 May 2022 15:50:26 -0500</pubDate><guid>https://jwoolbright.com/project-work/curriculum-development/</guid><description>Technical Curriculum During the time as a Technical Curriculum I was a Co-Author of a 5-day Linux Module.
One of the most interesting topics to learners after finishing our LC101 program is deploying projects that they have built during their time in class.
This module is meant to server as an introduction to Linux servers so that they can deploy their applications to a server using popular web servers like Caddy and Nginx.</description></item><item><title>Open Source Project Work</title><link>https://jwoolbright.com/project-work/open-source/</link><pubDate>Wed, 11 May 2022 15:50:26 -0500</pubDate><guid>https://jwoolbright.com/project-work/open-source/</guid><description>Description Below you fill find links to two different projects I participated in during my time at LaunchCode. Both projects are meant to further learners professionally after their have completed their coursework in the LC101 or CodeCamp programs that LaunchCode provides.
Starter Pack Collab Blog</description></item><item><title>Random Data Generator</title><link>https://jwoolbright.com/project-work/random-data-generator/</link><pubDate>Wed, 11 May 2022 15:46:05 -0500</pubDate><guid>https://jwoolbright.com/project-work/random-data-generator/</guid><description>Description During the development of the Linux curriculum we created a random data generator. The reason it was creaeted was to allow the learners work with tools like grep, sed, curl, and wget using a pre-defined data-set.
The generator allows users to do the following:
Send a request to the api to receive a random data set Send a request to the api to receive a pre-defined data set Receive the dataset in CSV or JSON format Examples You can send curl requests to the following endpoints or simply enter the url into a new browser window:</description></item></channel></rss>